@model CineTicket.Models.BookingViewModel

@{
    var bookedSeatsJson = Newtonsoft.Json.JsonConvert.SerializeObject(Model.AlreadyBookedSeats ?? new List<string>());
}

<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <title>Chọn Ghế - @Model.MovieTitle</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet" />
    <style>
        /* Toàn trang: nền gradient */
        body {
            background: linear-gradient(120deg, #f5f7fa, #c3cfe2);
            min-height: 100vh;
            font-family: 'Segoe UI', Tahoma, sans-serif;
        }

        /* Chứa toàn bộ phần chọn ghế trong 1 "card" */
        .theater-card {
            background-color: #fff;
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
            padding: 2rem;
        }

        .screen {
            background: linear-gradient(to right, #2c3e50, #3498db);
            color: white;
            padding: 15px;
            margin-bottom: 30px;
            text-align: center;
            border-radius: 10px;
            font-weight: bold;
            letter-spacing: 2px;
            font-size: 1.1rem;
        }

        .seat-container {
            display: grid;
            grid-template-columns: repeat(8, 1fr);
            gap: 10px;
            justify-content: center;
        }

        .seat {
            aspect-ratio: 1/1; /* đảm bảo ghế là hình vuông */
            background-color: #e0e0e0;
            border-radius: 8px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: all 0.3s ease;
            position: relative;
            border: 2px solid transparent;
        }

            .seat:hover:not(.occupied) {
                transform: scale(1.05);
                border-color: #6c5ce7; /* đổi thành màu tuỳ thích */
            }

            .seat.selected {
                background-color: #6c5ce7; /* màu tím nhạt */
                color: white;
                border-color: #6c5ce7;
            }

            .seat.occupied {
                background-color: #d63031; /* màu đỏ tươi */
                cursor: not-allowed;
                color: white;
                opacity: 0.8;
            }

        .seat-label {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            font-size: 0.7rem;
            font-weight: bold;
            color: rgba(0, 0, 0, 0.6);
            pointer-events: none;
        }

        .legend {
            display: flex;
            justify-content: center;
            gap: 20px;
            margin-top: 20px;
        }

            .legend .seat {
                width: 25px;
                height: 25px;
            }

        .total-section {
            margin-top: 20px;
            background-color: #f9f9f9;
            padding: 15px;
            border-radius: 10px;
        }

        /* Tiêu đề */
        .title-custom {
            font-size: 1.5rem;
            font-weight: 600;
            color: #333;
        }
    </style>
</head>
<body>
    <div class="container py-5">
        <div class="theater-card mx-auto" style="max-width: 850px;">
            <h2 class="text-center mb-4">Chọn Ghế - @Model.MovieTitle</h2>
            <div class="screen">MÀN HÌNH</div>

            <!-- Khu vực ghế -->
            <div class="seat-container" id="seat-container"></div>

            <!-- Chú thích -->
            <div class="legend">
                <span><div class="seat"></div> Ghế trống</span>
                <span><div class="seat selected"></div> Đang chọn</span>
                <span><div class="seat occupied"></div> Đã đặt</span>
            </div>

            <!-- Hiển thị tổng tiền -->
            <div class="total-section text-center">
                <h4>
                    Tổng tiền:
                    <span id="total-price" class="text-primary">0</span> VND
                </h4>
                <!-- Nút đặt vé, ban đầu disabled -->
                <button id="book-btn" class="btn btn-secondary mt-3" disabled>Đặt vé</button>
            </div>
        </div>
    </div>

    <!-- Form ẩn để gửi dữ liệu ghế được chọn (SeatNumbers) lên server -->
    <form id="booking-form" method="post" asp-action="ConfirmBooking">
        <input type="hidden" name="MovieId" value="@Model.MovieId" />
        <input type="hidden" name="MovieTitle" value="@Model.MovieTitle" />
        <input type="hidden" name="TicketPrice" value="@Model.TicketPrice" />
        <input type="hidden" name="ShowtimeId" value="@Model.ShowtimeId" />
        <input type="hidden" name="SeatNumbers" id="selected-seats" />
    </form>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const seatContainer = document.getElementById("seat-container");
            const totalPriceElement = document.getElementById("total-price");
            const bookButton = document.getElementById("book-btn");


            // Giá vé mỗi ghế: 100.000
            const seatPrice = parseInt("@Model.TicketPrice");

            // Các ghế đã đặt trong DB
            const bookedSeats = @Html.Raw(bookedSeatsJson);

            // 5 hàng A->E, mỗi hàng 8 ghế
            const rowLabels = ['A', 'B', 'C', 'D', 'E'];

            // Tạo ghế
            rowLabels.forEach(row => {
                for (let col = 1; col <= 8; col++) {
                    const seatId = `${row}${col}`;
                    const seatElement = document.createElement("div");
                    seatElement.classList.add("seat");

                    const seatLabel = document.createElement("span");
                    seatLabel.classList.add("seat-label");
                    seatLabel.textContent = seatId;
                    seatElement.appendChild(seatLabel);

                    // Nếu ghế đã đặt thì đánh dấu occupied (đỏ)
                    if (bookedSeats.includes(seatId)) {
                        seatElement.classList.add("occupied");
                    }

                    // Click chọn ghế
                    seatElement.addEventListener("click", () => {
                        if (!seatElement.classList.contains("occupied")) {
                            seatElement.classList.toggle("selected");
                            updateTotal();
                        }
                    });

                    seatContainer.appendChild(seatElement);
                }
            });

            // Hàm cập nhật tổng tiền
            function updateTotal() {
                const selectedSeats = document.querySelectorAll(".seat.selected");
                const total = selectedSeats.length * seatPrice;
                totalPriceElement.textContent = total.toLocaleString("vi-VN");

                // Nếu có ít nhất 1 ghế được chọn => enable nút
                bookButton.disabled = selectedSeats.length === 0;
                bookButton.className = selectedSeats.length > 0
                    ? "btn btn-primary mt-3"
                    : "btn btn-secondary mt-3";
            }

            // Gọi updateTotal() ngay khi vừa load (chưa chọn ghế => kết quả = 0)
            updateTotal();

            // Khi bấm "Đặt vé"
            bookButton.addEventListener("click", () => {
                const selectedSeats = document.querySelectorAll(".seat.selected");
                const seatIds = Array.from(selectedSeats).map(seat => {
                    const label = seat.querySelector('.seat-label');
                    return label ? label.textContent : '';
                }).filter(x => x !== '');

                // Gắn chuỗi ghế vào input ẩn
                document.getElementById("selected-seats").value = seatIds.join(',');
                // Submit form
                document.getElementById("booking-form").submit();
            });
        });
    </script>
</body>
</html>
